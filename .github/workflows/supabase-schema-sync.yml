name: Supabase Schema Sync

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 2 * * *"   # daily at 02:00 UTC

permissions:
  contents: write

jobs:
  schema-dump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install Supabase CLI
        run: |
          set -euo pipefail
          rm -f /tmp/supabase /tmp/supabase.tgz || true
          curl -L -o /tmp/supabase.tgz \
            https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz
          tar -xzf /tmp/supabase.tgz -C /tmp
          sudo mv -f /tmp/supabase /usr/local/bin/supabase
          sudo chmod +x /usr/local/bin/supabase
          supabase --version

      # Dump the public schema into docs/architecture/DBschema/schema.sql
      - name: Dump public schema (force IPv4, SSL)
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail

          # 1) Resolve the IPv4 address of your Supabase DB host
          DB_HOST="$(echo "$SUPABASE_DB_URL" | sed -E 's|^.*://[^@]*@([^/:]+).*|\1|')"
          IPV4="$(getent ahostsv4 "$DB_HOST" | awk '{print $1; exit}')"

          if [ -z "$IPV4" ]; then
            echo "Could not resolve IPv4 for $DB_HOST"
            exit 1
          fi

          # 2) Append hostaddr & sslmode to the URI so libpq uses IPv4 and SSL
          #    (URI query parameters are supported by libpq)
          if [[ "$SUPABASE_DB_URL" == *"?"* ]]; then
            DB_URL_V4="${SUPABASE_DB_URL}&hostaddr=${IPV4}&sslmode=require"
          else
            DB_URL_V4="${SUPABASE_DB_URL}?hostaddr=${IPV4}&sslmode=require"
          fi

          mkdir -p docs/architecture/DBschema
          # Use Supabase CLI without Docker to avoid more networking surprises
          supabase db dump --no-docker --db-url "$DB_URL_V4" --schema public > docs/architecture/DBschema/schema.sql

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/architecture/DBschema/schema.sql
          git commit -m "chore(schema): update schema [skip ci]" || echo "No changes to commit"
          git push
